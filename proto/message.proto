syntax = "proto2";
enum RequestType {
  PING = 0;
  SUBSCRIBE = 1;
  DOWNLOAD = 2;
  UPLOAD = 3;
  LIST = 4;
  LOGIN = 5;
  LOGOUT = 6;
  FILE_UPDATE = 7;
  FILE_DATA = 8;
}

message Request {
  required RequestType type = 1;
  // Login
  optional string username = 2;
  optional string password = 3;
  // Download / Upload
  optional string filename = 4;
  // Upload
  optional string data = 5;

  // File Update
  optional FileUpdate file_update = 6;

  optional FileDataUpdate file_data_update = 7;

}

enum ResponseType {
  LOGIN_OK = 0;
  ERROR = 1;
  DATA = 2;
  UPDATED = 3;
  FILE_LIST = 4;
  PONG = 5;
  FILE_UPDATED = 6;
  FILE_DATA_R = 7;
}

message Response {
  required ResponseType type = 1;
  // ERROR
  // UPLOAD | DOWNLOAD | LIST | UPDATED
  optional string error_msg = 2;
  // LOGIN
  optional int32 session_id = 3;
  // FILE SUBSCRIPTION UPDATED
  optional FileUpdate file_update = 5;
  // FILE LIST
  optional FileList file_list = 6;
  // FILE DATA
  optional FileData file_data = 7;
}

message FileDescriptor {
  required string filename = 1;
  optional bytes hash = 2;
}

message FileList {
  repeated FileDescriptor files = 1;
}

message FileData {
  required FileDescriptor file = 1;
  required string data = 2;
}

message FileUpdate {
  required string filename = 1;
  required bool deleted = 2;
  required bytes hash = 3;
}

message FileDataUpdate {
  required FileUpdate file_update = 1;
  required bytes data = 2;
}


enum TransactionType {
  CREATE_USER = 0;
  CREATE_SESSION = 1;
  REMOVE_SESSION = 2;
}

enum TransactionOuterType {
  TRANSACTION = 0;
  TRANSACTION_VOTE = 1;
  TRANSACTION_RESULT = 2;
  TRANSACTION_OK_ACK = 3;
}

message TransactionOuterMsg {
  required TransactionOuterType type = 1;
  optional TransactionMsg transaction = 2;
  optional TransactionVoteMsg vote = 3;
  optional TransactionResultMsg result = 4;
}

message TransactionMsg {
  required TransactionType type = 1;
  required int32 transaction_id = 2;
  optional CreateUserTransactionMsg create_user = 3;
  optional CreateSessionTransactionMsg create_session = 4;
  optional RemoveSessionTransactionMsg remove_session = 5;
}

enum TransactionVote {
  COMMIT = 0;
  ROLLBACK = 1;
}

message TransactionVoteMsg {
  required TransactionVote vote = 1;
  required int32 transaction_id = 2;
}

message TransactionResultMsg {
  required int32 transaction_id = 1;
  required TransactionVote result = 2;
}

message CreateUserTransactionMsg {
  required string username = 1;
  required string password = 2;
}

message CreateSessionTransactionMsg {
  required int32 session_id = 1;
  required string username = 2;
}

message RemoveSessionTransactionMsg {
  required int32 session_id = 1;
}

enum AdminMsgType {
  // Heartbeat request
  HEARTBEAT = 0;
  // Leader Election
  ELECTION = 1;
  ELECTION_ANSWER = 2;
  ELECTION_COORDINATOR = 3;



}

message AdminMsg {
  required AdminMsgType type = 1;
}